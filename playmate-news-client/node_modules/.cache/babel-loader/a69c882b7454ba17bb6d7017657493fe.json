{"ast":null,"code":"import _classCallCheck from \"/usr/local/code/playboy-interview/playmate-news-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/local/code/playboy-interview/playmate-news-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/usr/local/code/playboy-interview/playmate-news-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/local/code/playboy-interview/playmate-news-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/usr/local/code/playboy-interview/playmate-news-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/usr/local/code/playboy-interview/playmate-news-client/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { ApolloProvider, ApolloConsumer, Query, Mutation } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport gql from \"graphql-tag\";\nimport { ALL_NEWS, SEARCH_NEWS, ADD_NEWS } from \"./Queries\";\nvar client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\nvar searchPattern = \"coding\"; // contains the Apollo query for getting all the news from the server\n\nvar AllNewsEntries = function AllNewsEntries() {\n  return React.createElement(Query, {\n    query: ALL_NEWS,\n    pollInterval: 500,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, function (_ref) {\n    var loading = _ref.loading,\n        error = _ref.error,\n        data = _ref.data;\n    if (loading) return \"<p>Loading...</p>\";\n    if (error) return \"<p>Error :(</p>\";\n    return outputNewsEntries(data.entries);\n  });\n}; // contains the Apollo query for getting search reults from the server\n\n\nvar SearchNewsEntries = function SearchNewsEntries() {\n  var map = {};\n  map[\"pattern\"] = searchPattern;\n  return React.createElement(Query, {\n    query: SEARCH_NEWS,\n    variables: map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, function (_ref2) {\n    var loading = _ref2.loading,\n        error = _ref2.error,\n        data = _ref2.data;\n    if (loading) return \"<p>Loading...</p>\";\n    if (error) return \"<p>Error :(</p>\";\n    return outputSearchEntries(data.search);\n  });\n}; // used to display either allnews entries or search results\n\n\nvar PlaymateNewsEntries = AllNewsEntries;\n\nvar AddResults = function AddResults() {\n  return React.createElement('div', {\n    className: \"newsHeader\"\n  }, 'Nothing added yet');\n};\n/**\nAdds a new News entry to the playmante news board\n*/\n\n\nfunction addNewsEntry() {\n  var addLink = this.refs.addLink.value;\n  var addDescription = this.refs.addDescription.value;\n  var addUser = this.refs.addUser.value;\n}\n/**\nFunction to run the search query and display results\n*/\n\n\nfunction runSearchQuery() {\n  searchPattern = this.refs.searchTerm.value;\n  PlaymateNewsEntries = SearchNewsEntries;\n  ReactDOM.render(React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), document.getElementById('root'));\n} // end of function runSearchQuery\n\n/* Function to clear search results and return to just the news feed\n*/\n\n\nfunction clearSearchResults() {\n  PlaymateNewsEntries = AllNewsEntries;\n  ReactDOM.render(React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), document.getElementById('root'));\n}\n/* Function to run the search query and display results\n*/\n\n\nfunction outputSearchEntries(myMap) {\n  var temp = React.createElement('div', {\n    className: 'clearSearchDiv'\n  }, React.createElement('button', {\n    onClick: clearSearchResults.bind(this)\n  }, 'Clear Results'));\n  var list = [temp];\n  list.push(outputNewsEntries(myMap));\n  return list;\n}\n/* Common function between search results and all news, displays both in the same format\n*/\n\n\nfunction outputNewsEntries(myMap) {\n  var returnString = myMap.map(function (_ref3, index, x) {\n    var link = _ref3.link,\n        description = _ref3.description,\n        user = _ref3.user,\n        votes = _ref3.votes,\n        created = _ref3.created,\n        id = _ref3.id;\n    return React.createElement(\"div\", {\n      key: id,\n      className: \"newsEntry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, index + 1), React.createElement(\"div\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, description), \" \"), React.createElement(\"div\", {\n      className: \"stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, votes, \" points by \", user, \" added on \", new Date(created).toLocaleDateString(), \" \", new Date(created).toLocaleTimeString()));\n  });\n  return returnString;\n}\n/** \n(/  --- not sure why, but this squence fixes my editor sytax so I'm leaving it in.\n  Class for primary react component\n*/\n\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.addLink = \"\";\n    _this.addDescription = \"\";\n    _this.addUser = \"\";\n    _this.client = new ApolloClient({\n      uri: \"http://localhost:4000/\"\n    });\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addNewsEntry\",\n\n    /**\n    Adds a new News entry to the playmante news board\n    */\n    value: function addNewsEntry() {\n      var _this2 = this;\n\n      this.addLink = this.refs.addLink.value;\n      this.addDescription = this.refs.addDescription.value;\n      this.addUser = this.refs.addUser.value;\n\n      var AddNewsEntry = function AddNewsEntry() {\n        var map = {};\n        map[\"link\"] = _this2.addLink;\n        map[\"description\"] = _this2.addDescription;\n        map[\"user\"] = _this2.addUser;\n        alert(\"link is \" + map[\"link\"]);\n        alert(\"description is \" + map[\"description\"]);\n        alert(\"user is \" + map[\"user\"]);\n        return React.createElement(Mutation, {\n          mutation: ADD_NEWS,\n          variables: map,\n          ignoreResults: false,\n          client: client,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, function (_ref4) {\n          var loading = _ref4.loading,\n              error = _ref4.error,\n              data = _ref4.data;\n          if (loading) return React.createElement('div', {\n            className: \"newsHeader\"\n          }, 'Loading ...');\n          if (error) return React.createElement('div', {\n            className: \"newsHeader\"\n          }, '*** ERROR ***');\n          console.log(\" loading is ij console\" + loading);\n          alert(\"loading is \" + loading);\n          alert(\"error is \" + error);\n          alert(\"data is \" + data);\n          return outputNewsEntries(data.insertEntry);\n        });\n      };\n\n      AddResults = AddNewsEntry; // AddResults = AllNewsEntries;\n\n      ReactDOM.render(React.createElement(AddResults, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), document.getElementById('root')); //this.render();\n    }\n  }, {\n    key: \"generateAddQuery\",\n    value: function generateAddQuery() {\n      var addEntry = \"mutation { insertEntry( link: \\\"\" + this.addLink + \"\\\",  description: \\\"\" + this.addDescription + \"\\\", user:  \\\"\" + this.addUser + \"\\\"){ link, description, user, votes, created, id } }\";\n      return addEntry;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ApolloProvider, {\n        client: client,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"playmateNews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"newsHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"bunnyHeader\",\n        src: \"bunny-logo-feature-300.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), \" PLAYMATE NEWS\", React.createElement(\"div\", {\n        className: \"searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"searchButton\",\n        onClick: runSearchQuery.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"searchTerm\",\n        ref: \"searchTerm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"newsEntries\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(PlaymateNewsEntries, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"newsHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"ADD NEW NEWS\"), React.createElement(\"div\", {\n        className: \"addRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"addLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(\"input\", {\n        className: \"textInput\",\n        ref: \"addDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"addRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"addLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Link: \"), React.createElement(\"input\", {\n        className: \"textInput\",\n        ref: \"addLink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"addRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"addLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"User Name:\"), React.createElement(\"input\", {\n        className: \"textInput\",\n        ref: \"addUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"addRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.addNewsEntry.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"div\", {\n        className: \"addRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(AddResults, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/usr/local/code/playboy-interview/playmate-news-client/src/App.js"],"names":["React","Component","ReactDOM","ApolloProvider","ApolloConsumer","Query","Mutation","ApolloClient","gql","ALL_NEWS","SEARCH_NEWS","ADD_NEWS","client","uri","searchPattern","AllNewsEntries","loading","error","data","outputNewsEntries","entries","SearchNewsEntries","map","outputSearchEntries","search","PlaymateNewsEntries","AddResults","createElement","className","addNewsEntry","addLink","refs","value","addDescription","addUser","runSearchQuery","searchTerm","render","document","getElementById","clearSearchResults","myMap","temp","onClick","bind","list","push","returnString","index","x","link","description","user","votes","created","id","Date","toLocaleDateString","toLocaleTimeString","App","AddNewsEntry","alert","console","log","insertEntry","addEntry"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport {ApolloProvider, ApolloConsumer, Query, Mutation} from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport gql from \"graphql-tag\";\nimport {ALL_NEWS, SEARCH_NEWS, ADD_NEWS} from \"./Queries\"\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\n\nlet searchPattern = \"coding\";\n\n// contains the Apollo query for getting all the news from the server\nconst AllNewsEntries = () => {\n\n  return(\n    <Query \n      query ={ALL_NEWS}\n      pollInterval={500}>\n\n        {({ loading, error, data }) => {\n        if (loading) return \"<p>Loading...</p>\";\n        if (error) return  \"<p>Error :(</p>\";\n        return outputNewsEntries(data.entries);\n      }}\n    </Query>\n  );\n};\n\n// contains the Apollo query for getting search reults from the server\nconst SearchNewsEntries = () => {\n\n\nlet map : { [key: string]: string} = {};\nmap[\"pattern\"] = searchPattern;\n\n  return(\n    <Query \n      query ={ SEARCH_NEWS }\n      variables = {map}\n      >\n\n        {({ loading, error, data }) => {\n        if (loading) return \"<p>Loading...</p>\";\n        if (error) return  \"<p>Error :(</p>\";\n        \n        return outputSearchEntries(data.search);\n      }}\n    </Query>\n  );\n};\n\n// used to display either allnews entries or search results\nlet PlaymateNewsEntries =  AllNewsEntries;\nlet AddResults = () => {\n  return React.createElement('div', { className: \"newsHeader\"}, 'Nothing added yet');\n}\n\n/**\nAdds a new News entry to the playmante news board\n*/\nfunction addNewsEntry(){\n  var addLink = this.refs.addLink.value;\n  var addDescription = this.refs.addDescription.value;\n  var addUser = this.refs.addUser.value;\n}\n\n/**\nFunction to run the search query and display results\n*/\nfunction runSearchQuery(){\n  searchPattern = this.refs.searchTerm.value;\n  \n  PlaymateNewsEntries = SearchNewsEntries;\n  ReactDOM.render(<App />, document.getElementById('root'));\n}// end of function runSearchQuery\n\n/* Function to clear search results and return to just the news feed\n*/\nfunction clearSearchResults(){\n  PlaymateNewsEntries = AllNewsEntries;\n\n  ReactDOM.render(<App />, document.getElementById('root'));\n}\n\n/* Function to run the search query and display results\n*/\nfunction outputSearchEntries(myMap){\n\n  let temp = \n  React.createElement('div', { className: 'clearSearchDiv'},\n    React.createElement('button', { onClick: clearSearchResults.bind(this)}, 'Clear Results')\n  );\n  let list = [temp];\n  list.push(outputNewsEntries(myMap));\n\n  return list;\n}\n\n/* Common function between search results and all news, displays both in the same format\n*/\nfunction outputNewsEntries(myMap){\n     var returnString =  myMap.map(({ link, description,user, votes, created, id }, index, x) => (\n\n        <div key={id} className=\"newsEntry\">\n          <div className=\"id\">{ index + 1}</div>\n          <div className=\"description\"><a href={link}>{description}</a> </div>\n          <div className=\"stats\">{votes} points by {user} added on {(new Date(created)).toLocaleDateString()} {(new Date(created)).toLocaleTimeString()}</div>\n\n        </div>\n\n      ));\n\n      return returnString; \n}\n\n\n/** \n(/  --- not sure why, but this squence fixes my editor sytax so I'm leaving it in.\n  Class for primary react component\n*/\nexport default class App extends React.Component {\n\n  addLink = \"\";\n  addDescription = \"\";\n  addUser = \"\"; \n  client = new ApolloClient({\n    uri: \"http://localhost:4000/\"\n  });\n\n  /**\n  Adds a new News entry to the playmante news board\n  */\n  addNewsEntry(){\n    this.addLink = this.refs.addLink.value;\n    this.addDescription = this.refs.addDescription.value;\n    this.addUser = this.refs.addUser.value;\n\n\n    var AddNewsEntry = () => {\n\n      let map : { [key: string]: string} = {};\n      map[\"link\"] = this.addLink;\n      map[\"description\"] = this.addDescription;\n      map[\"user\"] = this.addUser;\n\n      alert(\"link is \" + map[\"link\"]);\n      alert(\"description is \" + map[\"description\"]);\n      alert(\"user is \" + map[\"user\"]);\n\n      return (\n\n        <Mutation \n          mutation={ADD_NEWS}\n          variables={map}\n          ignoreResults={false}\n          client={client}>\n\n            {({ loading, error, data }) => {\n\n              if (loading) return React.createElement('div', { className: \"newsHeader\"}, 'Loading ...');\n              if (error) return  React.createElement('div', { className: \"newsHeader\"}, '*** ERROR ***');\n\nconsole.log(\" loading is ij console\" + loading);\nalert(\"loading is \" + loading);\n\n\nalert(\"error is \" + error);\nalert(\"data is \" + data);\n              return outputNewsEntries(data.insertEntry);\n            }}\n        </Mutation>\n\n      );\n    };\n\n    AddResults = AddNewsEntry;\n\n   // AddResults = AllNewsEntries;\n\n    ReactDOM.render(<AddResults />, document.getElementById('root'));\n    //this.render();\n  }\n\n  generateAddQuery(){\n      var addEntry = \"mutation { insertEntry( link: \\\"\"+this.addLink+\"\\\",  description: \\\"\"+this.addDescription+\"\\\", user:  \\\"\"+this.addUser+\"\\\"){ link, description, user, votes, created, id } }\"\n      return addEntry;\n  }\n\n\n  render() {\n    return (\n      <ApolloProvider client={client}>\n\n      <div className=\"playmateNews\">\n        <div className=\"newsHeader\">\n          <img id=\"bunnyHeader\" src=\"bunny-logo-feature-300.gif\"/> PLAYMATE NEWS \n          <div className=\"searchBar\"><button id=\"searchButton\" onClick={runSearchQuery.bind(this)}>Search</button><input type=\"text\" id=\"searchTerm\" ref=\"searchTerm\" ></input></div>\n        </div>\n        <div className=\"newsEntries\">\n        <PlaymateNewsEntries/>\n        </div>\n\n        <div className=\"newsHeader\">\n          ADD NEW NEWS \n        </div>\n\n        <div className=\"addRow\">\n          <div className=\"addLabel\">Description:</div>\n          <input className=\"textInput\" ref=\"addDescription\"></input>\n        </div>\n        <div className=\"addRow\">\n          <div className=\"addLabel\">Link: </div>\n          <input className=\"textInput\"  ref=\"addLink\"></input>\n        </div>\n        <div className=\"addRow\">\n          <div className=\"addLabel\">User Name:</div>\n          <input className=\"textInput\"  ref=\"addUser\"></input>\n        </div>\n        <div className=\"addRow\" >\n          <button onClick={this.addNewsEntry.bind(this)}>Add</button>\n        </div>\n        <div className=\"addRow\">\n          <AddResults />\n        </div>\n      </div>\n\n\n      </ApolloProvider>\n    );\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}